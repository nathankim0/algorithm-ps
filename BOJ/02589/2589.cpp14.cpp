#include <iostream>#include <queue>#include <vector>#include <cstdio>#include <string.h>#include <algorithm>using namespace std;queue<pair<int, int>>q;pair<int, int>p;int dx[] = { 1,0,-1,0 };int dy[] = { 0,1,0,-1 };char arr[51][51];int d[51][51];bool check[51][51];int tmp[51][51];int n, m; //세로n 가로mpriority_queue<int> mindis;;void bfs(int y, int x) {	memset(check, false, sizeof(check));	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			tmp[i][j] = d[i][j];		}	}	int result = 0;	q.push({ y, x });	int ny;	int nx;	check[y][x] = true;	while (!q.empty()) {		p = q.front();		q.pop();		for (int i = 0; i < 4; i++) {			ny = p.first + dy[i];			nx = p.second + dx[i];			if (0 <= ny&&ny < n && 0 <= nx&&nx < m&&tmp[ny][nx] == 0&&check[ny][nx] == false) {				check[ny][nx] = true;				tmp[ny][nx] = tmp[p.first][p.second] + 1;				if (result < tmp[ny][nx]) result = tmp[ny][nx];				q.push({ ny,nx });			}		}	}	mindis.push(result);}void prin(void) {	cout << endl;	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			cout << tmp[i][j] << "  ";		}		cout << endl;	}	cout << endl;}int main() {	memset(d, -1, sizeof(d));	cin >> n >> m;	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			cin >> arr[i][j];			if (arr[i][j] == 'L') {				d[i][j] = 0;			}		}	}	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			if (arr[i][j] == 'L') {				bfs(i, j);				//prin();			}		}	}	cout << mindis.top();}