#include <iostream>#include <vector>#include <algorithm>using namespace std;int r, c;char arr[21][21];//int check[21][21];int dx[] = { 1,0,-1,0 };int dy[] = { 0,1,0,-1 };int alpha[26];int result = 0;void dfs(int x, int y, int t) {	result = max(t, result);	/*	for (int i = 0; i < r; i++) {		for (int j = 0; j < c; j++) {			cout<< check[i][j]<<" ";		}		cout << endl;	}	cout << endl;	*/	for (int i = 0; i < 4; i++) {		int nx = x + dx[i];		int ny = y + dy[i];		if (0 <= nx && nx < c && 0 <= ny && ny < r) {			if (alpha[arr[ny][nx] - 65] == 0) {				alpha[arr[ny][nx] - 65] = 1;				//check[ny][nx] = check[y][x] + 1;				dfs(nx, ny, t+1);				alpha[arr[ny][nx] - 65] = 0;			}		}	}}int main() {	cin >> r >> c;	for (int i = 0; i < r; i++) {		for (int j = 0; j < c; j++) {			cin>>arr[i][j];		}	}	//check[0][0] = 1;	alpha[arr[0][0] - 65] = 1;	dfs(0, 0,1);	cout << result;}