#include <iostream>#include <queue>#include <vector>#include <string.h>using namespace std;int arr[1001][1001];int m, n; //m가로 n세로int dx[4] = { 1,0,-1,0 };int dy[4] = { 0,-1,0,1 };int cnt = 0;bool tmpc = true;queue<pair<int, int>> q;pair<int, int> p;int ny;int nx;int result;int main() {	std::ios::sync_with_stdio(false);	cin.tie(0);	cin >> m >> n;	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			cin >> arr[i][j];			if (arr[i][j] == 0) {				tmpc = false; //하나라도 안익었으면			}			else if (arr[i][j] == 1) {				q.push(make_pair(i, j));			}		}	}	while (!q.empty()) {		p = q.front();	//	cout << p.second << " " << p.first << endl;		q.pop();		for (int i = 0; i < 4; i++) {			ny = p.first + dy[i];			nx = p.second + dx[i];			if (0 <= ny && ny < n && 0 <= nx && nx < m && arr[ny][nx] == 0) {				q.push(make_pair(ny, nx));				result=arr[ny][nx] = arr[p.first][p.second] + 1;			}		}	}	if (tmpc) { //다 익어있을때		cout << "0";		return 0;	}	for (int i = 0; i < n; i++) {		for (int j = 0; j < m; j++) {			if (arr[i][j] == 0) {				cout << "-1";				return 0;			}		}	}	cout <<result-1;}