#include <iostream>#include <queue>#include <vector>#include <algorithm>#include <string>using namespace std;vector<vector<int>> vec(10001);bool check[1001];bool check2[1001];void dfs(int x) {	cout << x<<" ";	check[x] = true;	for (int i = 0; i<vec[x].size(); i++) {		int n = vec[x][i];		if (check[n] == false) {			dfs(n);		}	}}void bfs(int x) {	queue<int> q;	q.push(x);	check2[x] = true;	while (!q.empty()) {		int tmp;		tmp = q.front();		q.pop();		cout << tmp << " ";		for (int i = 0; i<vec[tmp].size(); i++) {			int n = vec[tmp][i];			if (check2[n] == false) {				check2[n] = true;				q.push(n);			}		}	}}int main() {	int n, m, v; //정점n 간선m 탐색시작v	cin >> n >> m >> v;	int a, b;	for (int i = 0; i<m; i++) {		cin >> a >> b;		vec[a].push_back(b);		vec[b].push_back(a);	}	for (int i = 0; i < m; i++) {		sort(vec[i].begin(), vec[i].end());	}	dfs(v);	cout << "\n";	bfs(v);	return 0;}