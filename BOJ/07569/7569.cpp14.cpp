#include <iostream>#include <queue>#include <vector>using namespace std;int arr[101][101][101];int m, n, h; //m가로 n세로 h상자수int dx[] = { 1,0,-1,0,0,0 }; int dy[] = { 0,1,0,-1,0,0 };int dz[] = { 0,0,0,0,1,-1 };//동,남,서,북,위,아래int cnt = 0;bool tmpc = true;queue<pair<int, pair<int,int>>> q;pair<int, pair<int,int>> p;int ny;int nx;int nz;int result;int main() {	cin >> m >> n >> h;	for (int k = 0; k < h; k++) {		for (int i = 0; i < n; i++) {			for (int j = 0; j < m; j++) {				cin >> arr[k][i][j];				if (arr[k][i][j] == 0) {					tmpc = false; //하나라도 안익었으면				}				else if (arr[k][i][j] == 1) {					q.push(make_pair(k,make_pair(i, j)));				}			}		}	}	while (!q.empty()) {		p = q.front();		q.pop();		for (int i = 0; i < 6; i++) {			nz = p.first + dz[i];			ny = p.second.first + dy[i];			nx = p.second.second + dx[i];			if (0 <= nz&&nz < h && 0 <= ny && ny < n && 0 <= nx && nx < m && arr[nz][ny][nx] == 0) {				q.push(make_pair(nz, make_pair(ny, nx)));				result = arr[nz][ny][nx] = arr[p.first][p.second.first][p.second.second] + 1;			}		}	}	if (tmpc) { //다 익어있을때		cout << "0";		return 0;	}	//for (int k = 0; k < h; k++) {	//	for (int i = 0; i < n; i++) {	//		for (int j = 0; j < m; j++) {	//			cout << arr[k][i][j];	//					//		}	//		cout << endl;	//	}	//	cout << endl;	//}	for (int k = 0; k < h; k++) {		for (int i = 0; i < n; i++) {			for (int j = 0; j < m; j++) {				if (arr[k][i][j] == 0) {					cout << "-1";					return 0;				}			}		}	}	cout << result - 1;}