#include <iostream>#include <vector>#include <algorithm>using namespace std;bool check[1001];vector<int>vec[1001];int n, m;void dfs(int x) {	//cout << x<<" ";	for (int i = 0; i < vec[x].size(); i++) {		if (check[vec[x][i]] == false) {			check[vec[x][i]] = true;			dfs(vec[x][i]);		}	}}int main() {	cin >> n >> m;	int t1, t2;	for (int i = 0; i < m; i++) {		cin >> t1 >> t2;		vec[t1].push_back(t2);		vec[t2].push_back(t1);	}	int cnt = 0;	for (int i = 1; i <= n; i++) {		if (check[i] == false) {			check[i] = true;			dfs(i);			cnt++;		//	cout << endl;			}	}	cout << cnt;}